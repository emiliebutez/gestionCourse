/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.gestioncourses.views.coureur;

import com.mycompany.gestioncourses.models.Coureur;
import com.mycompany.gestioncourses.services.CoureurService;
import com.mycompany.gestioncourses.views.MainFrame;
import com.mycompany.gestioncourses.views.utils.DropDownRenderer;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Map;
import javax.swing.JComboBox;

/**
 *
 * @author Emilie
 */
public class ConnexionCoureurPanel extends javax.swing.JPanel implements ActionListener {
    
    private MainFrame frame;
    private CoureurService coureurService = CoureurService.getInstance();
    private List<Coureur> coureurs = coureurService.coureurs();
    private Coureur coureurSelectionnee;

    /**
     * Creates new form ConnexionCoureurPanel
     */
    public ConnexionCoureurPanel(MainFrame frame) {
        this.frame = frame;
        initComponents();
        if (this.coureurs.size() != 0) {
            this.choixCoureur.addActionListener(this);
            this.coureurs.stream().forEach(c -> this.choixCoureur.addItem(c));
            this.coureurSelectionnee = this.coureurs.isEmpty() ? null : this.coureurs.get(0);
            this.choixCoureur.setRenderer(new DropDownRenderer<Coureur>(coureur -> String.format("%s %s", coureur.getPrenom(), coureur.getNom())));
        
            this.invalidate();
            this.repaint();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inscription = new javax.swing.JButton();
        choixCoureur = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        validation = new javax.swing.JButton();
        utilisateur = new javax.swing.JButton();

        inscription.setText("S'inscrire");
        inscription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inscriptionActionPerformed(evt);
            }
        });

        choixCoureur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choixCoureurActionPerformed(evt);
            }
        });

        jLabel1.setText("Choix coureur :");

        validation.setBackground(new java.awt.Color(102, 255, 102));
        validation.setText("Connexion");
        validation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validationActionPerformed(evt);
            }
        });

        utilisateur.setText("Choix utilisateur");
        utilisateur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                utilisateurActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(utilisateur)
                        .addGap(33, 33, 33)
                        .addComponent(inscription)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(validation)
                            .addComponent(choixCoureur, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inscription)
                    .addComponent(utilisateur))
                .addGap(91, 91, 91)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(choixCoureur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(validation)
                .addGap(56, 56, 56))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void inscriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inscriptionActionPerformed
        this.frame.displayInscriptionCoureurPanel();
    }//GEN-LAST:event_inscriptionActionPerformed

    private void utilisateurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_utilisateurActionPerformed
        this.frame.displayUtilisateur();
    }//GEN-LAST:event_utilisateurActionPerformed

    private void choixCoureurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choixCoureurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_choixCoureurActionPerformed

    private void validationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validationActionPerformed
        if (this.coureurSelectionnee != null){
            this.frame.displayMenuCoureurPanel(this.coureurSelectionnee);
        }
        return;
    }//GEN-LAST:event_validationActionPerformed

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == this.choixCoureur) {
            selectionCoureur((Coureur) this.choixCoureur.getSelectedItem());
            return;
        }
    }
    
    private void selectionCoureur(Coureur value) {
        this.coureurSelectionnee = value;
        if (value != null) {
            this.repaint();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Coureur> choixCoureur;
    private javax.swing.JButton inscription;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton utilisateur;
    private javax.swing.JButton validation;
    // End of variables declaration//GEN-END:variables
}
